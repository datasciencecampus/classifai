[project]
name = "classifAI"
description = "A modular library for text classification, as extendable microservices"
authors = [{name = "Data Science Campus", email = "datasciencecampus@ons.gov.uk"}]
readme = "README.md"
version = "0.0.1"
license = {file = "LICENSE"}
requires-python = ">=3.10,<4.0"
#dynamic = ["version"]
dependencies = [
    "uvicorn>0.34.0",
    "fastapi[standard]>=0.115.11",
    "fastapi-cli>=0.0.7",
    "opentelemetry-instrumentation-fastapi>=0.52b1",
    "typing-inspect>=0.9.0",
    "typing_extensions>=4.12.2",
    "python-dotenv>=1.0.1",
    "numpy>=2.2.4",
    "requests>=2.32.3",
    "requests-oauthlib>=2.0.0",
    "requests-toolbelt>=1.0.0",
    "polars>=1.26.0",
    "pandas>=2.3.0",
    "pydantic>=2.9.2",
    "pydantic-settings>=2.8.1",
    "pydantic_core>=2.23.4",
    "fastparquet>=2024.11.0",
    "pyarrow>=20.0.0",
    "tqdm>=4.67.1",
    "scikit-learn>=1.7.2",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]

[build-system]
requires = ["setuptools>=62"]
build-backend = "setuptools.build_meta"

#[tool.setuptools.dynamic]
#version = {attr = "classifai.__version__"}

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools.package-data]
classifai = []

[project.optional-dependencies]
huggingface = [
    "transformers>=4.52.4",
    "torch>=2.7.1"
]
ollama = [
    "ollama>=0.5.1"
]
gcp = [
    "google-ai-generativelanguage>=0.6.15",
    "google-api-core>=2.24.2",
    "google-api-python-client>=2.165.0",
    "google-auth>=2.38.0",
    "google-auth-httplib2>=0.2.0",
    "google-cloud-aiplatform>=1.85.0",
    "google-cloud-appengine-logging>=1.6.1",
    "google-cloud-audit-log>=0.3.2",
    "google-cloud-bigquery>=3.30.0",
    "google-cloud-core>=2.4.3",
    "google-cloud-logging>=3.11.4",
    "google-cloud-resource-manager>=1.14.2",
    "google-cloud-secret-manager>=2.23.2",
    "google-cloud-storage>=2.19.0",
    "google-crc32c>=1.7.0",
    "google-genai>=1.8.0",
    "google-generativeai>=0.8.4",
    "google-resumable-media>=2.7.2",
    "googleapis-common-protos>=1.69.2",
    "grpc-google-iam-v1>=0.14.2",
    "langchain-google-vertexai>=2.0.16"
]
all = [
    "classifai[huggingface,gcp,ollama]"
]

[tool.ruff]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    # Enabling ALL is not recommended it will implicitly enable new rules after upgrade.
    # "ALL",

    # Ruff rules: https://docs.astral.sh/ruff/rules/

    "E",      # pycodestyle erros
    "W",      # pycodestyle warnings
    "F",      # Pyflakes
    "UP",     # pyupgrade
    "I",      # isort
    "B",      # flake8-bugbear
    "SIM",    # flake8-simplify
    "C4",     # flake8-comprehensions
    "S",      # flake8-bandit
    "D",      # pydocstyle - Enforce existing docstrings only
    "C90",    # mccabe
    "RUF",    # Ruff specific rules

    # PL - Pylint is only partially supported, we also use the pylint tool to catch all the rules.
    # It is enabled here to take advantage of the ruff's speed.
    "PL",
]

ignore = [
    # Conflicts with google docstring style
    "D205",
    # Allow missing docstring, remove to enforce docstrings across the board
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107",
    # Disable line length check as it is handled by black
    # :TODO: Remove E501 when ruff supports all black rules
    "E501",
    # indentation contains tabs
    "W191",
    "PLC0415",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    # Allow use of assert statements in tests
    "S101",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "nbstripout>=0.8.1",
    "pre-commit>=4.3.0",
    "ruff>=0.13.0",
    "pytest-cov >= 6.0.0",
    "bandit >= 1.8.3",
    "pytest >= 8.3.5",
    "mkdocs >= 1.6.1",
    "mkdocstrings >= 0.29.0",
    "mkdocstrings-python >= 1.16.7",
    "mkdocs-material >= 9.6.9",
    {include-group = "test"},
]
test = [
    "pytest>=8.4.2",
]

[project.urls]
homepage = "https://github.com/datasciencecampus/classifAI_API"
